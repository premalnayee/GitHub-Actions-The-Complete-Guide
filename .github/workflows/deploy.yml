name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get & Cache Dependencies
        id: cache-deps
        uses: ./.github/actions/cache-deps/
        with:
          caching: false
      - name: Output used-cache
        run: 'echo "Cache used: ${{ steps.cache-deps.outputs.used-cache }}"'
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get & Cache Dependencies
        uses: ./.github/actions/cache-deps/
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get & Cache Dependencies
        uses: ./.github/actions/cache-deps/
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."
  information:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy to S3
        id: deployS3
        uses: ./.github/actions/deploy-s3-javascript/
        env:
          AWS_ACCESS_KEY_ID: 'AWS_ACCESS_KEY_ID' #${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: 'AWS_SECRET_ACCESS_KEY' # ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: 'archive bucket'
          region: 'eu-west-1'
          source: dist
      - name: Output S3 URI
        run: echo "Deployed to ${{ steps.deployS3.outputs.s3uri }}"
      - name: Deploy to S3 with Dockerfile
        env:
          AWS_ACCESS_KEY_ID: 'AWS_ACCESS_KEY_ID' #${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: 'AWS_SECRET_ACCESS_KEY' # ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: ./.github/actions/dockerfile/
        with:
          bucket: 'archive bucket'
          bucket_region: 'eu-west-1'
          dist_folder: 'dist'
      - name: Output Information
        run: |
          echo "Live URL: ${{ steps.deployS3.outputs.website-url }}"
